name: Build SFT1200 OpenWrt

on:
  schedule:
    - cron: 0 20 * * *
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Before freeing up disk space
      run: |
        echo "Before freeing up disk space"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    - name: "Optimize Disk Space"
      uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
      with:
        operate_sudo: "True"
        general_include: ".+"
        general_exclude: |-
          ^GCC$
          ^G\+\+$
          Clang
          LLVM
        docker_include: ".+"
        docker_prune: "True"
        docker_clean: "True"
        apt_prune: "True"
        apt_clean: "True"
        homebrew_prune: "True"
        homebrew_clean: "True"
        npm_prune: "True"
        npm_clean: "True"
        os_swap: "True"

    - name: Freeing up disk space
      uses: easimon/maximize-build-space@master
      with: 
        root-reserve-mb: 2048
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Free up disk space complete
      run: |
        echo "Free up disk space complete"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="
    
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update -y
        sudo apt-get full-upgrade -y
        sudo apt install -y expect ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo apt-get remove subversion
        sudo apt-get install subversion
        echo "update完成"
    
    - name: Create new user
      run: |
        sudo adduser "builder" <<EOF
        12345
        12345
        EOF
        echo "新建用户完成"
        expect -c "
        spawn su - builder
        expect \":\"
        send \"12345\r\"
        interact
        "
        echo "用户切换成功"
    - name: Clone source code
      run: |
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
        git clone https://github.com/201821143044/gl-infra-builder-new.git && cd gl-infra-builder-new
        echo "源码抓取完毕"
        python3 setup.py -c ./configs/config-siflower-18.x.yml && cd openwrt-18.06/siflower/openwrt-18.06
        ./scripts/gen_config.py target_siflower_gl-sft1200 luci

        sed -i "/helloworld/d" "feeds.conf.default"
        echo "src-git gl https://github.com/gl-inet/gl-feeds.git;18.06" >> "feeds.conf.default"
        echo "src-git luci2 https://github.com/coolsnowwolf/luci" >> "feeds.conf.default"
        echo "src-git packages2 https://github.com/coolsnowwolf/packages" >> "feeds.conf.default"
        echo "src-git PWpackages https://github.com/xiaorouji/openwrt-passwall-packages.git;main" >> "feeds.conf.default"
        echo "src-git PWluci https://github.com/xiaorouji/openwrt-passwall.git;main" >> "feeds.conf.default"
        echo "src-git helloworld https://github.com/fw876/helloworld.git;master" >> "feeds.conf.default"
        ./scripts/feeds clean

        ./scripts/feeds update -a
        ./scripts/feeds install -a
        echo "feeds更新完毕"

        rm -rf feeds/packages2/net/xray-core
        rm -rf feeds/packages2/net/v2ray-geodata
        rm -rf feeds/packages2/net/sing-box
        rm -rf feeds/packages2/net/chinadns-ng
        rm -rf feeds/packages2/net/dns2socks
        rm -rf feeds/packages2/net/dns2tcp
        rm -rf feeds/packages2/net/microsocks
        cp -r feeds/PWpackages/xray-core feeds/packages2/net
        cp -r feeds/PWpackages/v2ray-geodata feeds/packages2/net
        cp -r feeds/PWpackages/sing-box feeds/packages2/net
        cp -r feeds/PWpackages/chinadns-ng feeds/packages2/net
        cp -r feeds/PWpackages/dns2socks feeds/packages2/net
        cp -r feeds/PWpackages/dns2tcp feeds/packages2/net
        cp -r feeds/PWpackages/microsocks feeds/packages2/net

        rm -rf feeds/packages/devel/diffutils
        rm -rf feeds/packages/utils/jq
        rm -rf feeds/packages/net/zerotier
        git clone https://github.com/coolsnowwolf/packages.git
        cp -r packages/devel/diffutils feeds/packages/devel
        cp -r packages/utils/jq feeds/packages/utils
        cp -r packages/net/zerotier feeds/packages/net
        rm -rf packages
        
        rm -rf feeds/packages/lang/golang
        rm -rf feeds/packages2/lang/golang
        git clone https://github.com/sbwml/packages_lang_golang -b 23.x feeds/packages/lang/golang
        git clone https://github.com/sbwml/packages_lang_golang -b 23.x feeds/packages2/lang/golang
        sed -i '/-linkmode external \\/d' feeds/packages/lang/golang/golang-package.mk
        sed -i '/-linkmode external \\/d' feeds/packages2/lang/golang/golang-package.mk

        rm -rf feeds/packages2/multimedia/aliyundrive-webdav
        rm -rf feeds/luci2/applications/luci-app-aliyundrive-webdav
        git clone https://github.com/messense/aliyundrive-webdav.git
        cp -r aliyundrive-webdav/openwrt/aliyundrive-webdav feeds/packages2/multimedia
        cp -r aliyundrive-webdav/openwrt/luci-app-aliyundrive-webdav feeds/luci2/applications
        rm -rf aliyundrive-webdav

        sed -i 's/PKG_VERSION:=0.53.2/PKG_VERSION:=0.60.0/' feeds/packages2/net/frp/Makefile
        sed -i 's/PKG_HASH:=ff2a4f04e7732bc77730304e48f97fdd062be2b142ae34c518ab9b9d7a3b32ec/PKG_HASH:=8feaf56fc3f583a51a59afcab1676f4ccd39c1d16ece08d849f8dc5c1e5bff55/' feeds/packages2/net/frp/Makefile

        wget https://codeload.github.com/fw876/helloworld/zip/28504024db649b7542347771704abc33c3b1ddc8 -O helloworld.zip
        unzip helloworld.zip
        rm -rf feeds/helloworld/shadowsocks-rust
        cp -r helloworld-28504024db649b7542347771704abc33c3b1ddc8/shadowsocks-rust feeds/helloworld
        rm -rf feeds/PWpackages/shadowsocks-rust
        cp -r helloworld-28504024db649b7542347771704abc33c3b1ddc8/shadowsocks-rust feeds/PWpackages
        rm -rf helloworld.zip helloworld-28504024db649b7542347771704abc33c3b1ddc8

        wget https://codeload.github.com/fw876/helloworld/zip/ea2a48dd6a30450ab84079a0c0a943cab86e29dc -O helloworld.zip
        unzip helloworld.zip
        rm -rf feeds/helloworld/shadowsocksr-libev
        cp -r helloworld-ea2a48dd6a30450ab84079a0c0a943cab86e29dc/shadowsocksr-libev feeds/helloworld
        sed -i '/DEPENDS:=+libev +libsodium +libopenssl +libpthread +libpcre +libudns +zlib +libopenssl-legacy/s/ +libopenssl-legacy//' feeds/helloworld/shadowsocksr-libev/Makefile
        rm -rf feeds/PWpackages/shadowsocksr-libev
        cp -r feeds/helloworld/shadowsocksr-libev feeds/PWpackages
        rm -rf helloworld.zip helloworld-ea2a48dd6a30450ab84079a0c0a943cab86e29dc

        rm -rf feeds/helloworld/dns2tcp
        rm -rf feeds/PWpackages/dns2tcp
        git clone https://github.com/sbwml/openwrt_helloworld
        cp -r openwrt_helloworld/dns2tcp feeds/helloworld
        cp -r openwrt_helloworld/dns2tcp feeds/PWpackages
        rm -rf openwrt_helloworld

        git clone https://github.com/coolsnowwolf/lede.git
        cp -r lede/tools/ninja tools
        cp -r lede/package/lean/adbyby package
        rm -rf lede

        git clone https://github.com/kongfl888/luci-app-adguardhome.git package/luci-app-adguardhome

        rm -rf package/libs/openssl
        rm -rf package/libs/ustream-ssl
        wget 'https://github.com/wekingchen/Actions-SFT1200/raw/main/libs.zip' --no-check-certificate && unzip -o libs.zip && rm -f libs.zip
        wget https://github.com/wekingchen/Actions-SFT1200/raw/main/board-2.bin.ddcec9efd245da9365c474f513a855a55f3ac7fe -P dl/

        rm -rf .config
        echo "删除配置完毕"
        wget https://github.com/201821143044/Actions-GL.iNet-OpenWrt/raw/main/sft1200/.config
        echo "配置抓取完毕"
        make -j8 download V=s
        echo "下载完毕"
        make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: gl-infra-builder-new/openwrt-18.06/siflower/openwrt-18.06/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd "/home/runner/work/Actions-GL.iNet-OpenWrt/Actions-GL.iNet-OpenWrt/gl-infra-builder-new/openwrt-18.06/siflower/openwrt-18.06/bin/"
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "status=success" >> $GITHUB_OUTPUT
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: /home/runner/work/Actions-GL.iNet-OpenWrt/Actions-GL.iNet-OpenWrt/gl-infra-builder-new/openwrt-18.06/siflower/openwrt-18.06/bin/targets/siflower/openwrt-*squashfs*

    - name: Delete workflow runs
      uses: wekingchen/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 10

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 6
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
